<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>廢宅筆記</title>
    <link>https://blog.zackexplosion.fun/</link>
    <description></description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Mon, 13 May 2024 01:12:31 +0800</lastBuildDate><atom:link href="https://blog.zackexplosion.fun/index.xml" rel="self" type="application/rss+xml" />
      <item>
        <title>Tips to Avoid Getting a Cold</title>
        <link>https://blog.zackexplosion.fun/posts/tips_to_avoid_getting_a_cold/</link>
        <pubDate>Mon, 13 May 2024 01:12:31 +0800</pubDate>
        
        <guid>https://blog.zackexplosion.fun/posts/tips_to_avoid_getting_a_cold/</guid>
        <description>During the cold and flu season, it&amp;rsquo;s important to take precautions to avoid getting sick. Here are some tips to help you stay healthy:
Wash your hands frequently with soap and water to prevent the spread of germs. Boost your immune system by eating a healthy diet rich in fruits, vegetables, and whole grains. Stay hydrated by drinking plenty of water and herbal teas. Get enough rest and practice good sleep hygiene to support your body&amp;rsquo;s natural defenses.</description>
      </item>
    
      <item>
        <title>The Dance of Code</title>
        <link>https://blog.zackexplosion.fun/posts/the_dance_of_code/</link>
        <pubDate>Mon, 13 May 2024 01:03:02 +0800</pubDate>
        
        <guid>https://blog.zackexplosion.fun/posts/the_dance_of_code/</guid>
        <description>In the realm of pixels and light, Where the language of the machine takes flight, There dwells a coder, wise and bright, Crafting lines of logic, ever so tight.
With keystrokes deft, a symphony unfolds, A dance of zeros and ones, a story untold, Through loops and functions, new worlds are made, In the endless expanse of the digital glade.
Brilliant minds, with algorithms in hand, Weave webs of code across the land, Solving problems, big and small, With precision and finesse, they conquer all.</description>
      </item>
    
      <item>
        <title>Lullaby for Lena</title>
        <link>https://blog.zackexplosion.fun/posts/lullaby_for_lena/</link>
        <pubDate>Mon, 13 May 2024 01:00:01 +0800</pubDate>
        
        <guid>https://blog.zackexplosion.fun/posts/lullaby_for_lena/</guid>
        <description>In the soft moonlight&amp;rsquo;s gentle glow, Close your eyes, my Lena, and let go, As the stars twinkle in the night, May sweet dreams fill your sight.
Rest your head upon the pillow, Let go of all your worries, my willow, Know that I am by your side, As you peacefully in slumber abide.
So drift off now, my dearest one, Underneath the quiet moon and sun, May angels guard you through the night, Until the morning brings its light.</description>
      </item>
    
      <item>
        <title>俄羅斯騎士團</title>
        <link>https://blog.zackexplosion.fun/posts/ai_blogging_2024-05-12t221650/</link>
        <pubDate>Sun, 12 May 2024 22:16:51 +0800</pubDate>
        
        <guid>https://blog.zackexplosion.fun/posts/ai_blogging_2024-05-12t221650/</guid>
        <description>俄羅斯騎士團在俄羅斯歷史上扮演著重要的角色。他們是一群勇敢無畏的戰士，通常被用來保護俄羅斯的邊疆，參與不同的軍事行動和領土擴張。騎士團的存在可以追溯到中世紀，他們具有獨特的文化和傳統，如特殊的服飾、舞蹈和音樂。騎士團也在俄羅斯的歷史上留下了深遠的影響，成為了一個重要的象徵。Traditional Chinese, English, Russian.</description>
      </item>
    
      <item>
        <title>About Node.js in 3 Languages</title>
        <link>https://blog.zackexplosion.fun/posts/ai_blogging_2024-05-12t213547/</link>
        <pubDate>Sun, 12 May 2024 21:35:47 +0800</pubDate>
        
        <guid>https://blog.zackexplosion.fun/posts/ai_blogging_2024-05-12t213547/</guid>
        <description>English: Node.js is a popular open-source, cross-platform JavaScript runtime environment that allows developers to build server-side applications. When encountering bugs in Node.js, developers can utilize tools like debuggers, console.log statements, and testing frameworks to identify and fix issues in the code. By thoroughly understanding the error messages and the context in which the bugs occur, developers can troubleshoot and resolve them effectively.
Chinese Traditional: Node.js 是一個流行的開源、跨平台的JavaScript運行時環境，允許開發人員構建伺服器端應用程序。在 Node.js 中遇到錯誤時，開發人員可以利用調試器、console.log語句和測試框架等工具來識別並修復代碼中的問題。通過深入理解錯誤消息和錯誤發生的上下文，開發人員可以有效地進行故障排除和修復。
Russian: Node.js - это популярная открытая кроссплатформенная среда выполнения JavaScript, которая позволяет разработчикам создавать серверные приложения.</description>
      </item>
    
      <item>
        <title>How To Setup Node.js on Brand New Mac</title>
        <link>https://blog.zackexplosion.fun/posts/setup-nodejs-on-barnd-new-mac/</link>
        <pubDate>Tue, 30 Apr 2024 13:41:18 +0800</pubDate>
        
        <guid>https://blog.zackexplosion.fun/posts/setup-nodejs-on-barnd-new-mac/</guid>
        <description>Want to be a JavaScript programmer?
Let&amp;rsquo;s start with the environment setup!
Install oh-my-zsh Run the command in your terminal.
sh -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&amp;#34; What is oh-my-zsh? Once ZSH installed, your terminal shell will become the talk of the town or your money back! With each keystroke in your command prompt, you&amp;rsquo;ll take advantage of the hundreds of powerful plugins and beautiful themes. Strangers will come up to you in cafés and ask you, &amp;ldquo;that is amazing!</description>
      </item>
    
      <item>
        <title>How to run Nodemon on Windows</title>
        <link>https://blog.zackexplosion.fun/posts/running_nodemon_on_windows/</link>
        <pubDate>Fri, 22 Mar 2024 12:53:27 +0800</pubDate>
        
        <guid>https://blog.zackexplosion.fun/posts/running_nodemon_on_windows/</guid>
        <description>Installation To your current working directory then open terminal.
npm install nodemon --save-dev If you install nodemon globally on windows it will require more step to let it works, So&amp;hellip;we want to install nodemon locally with the --save-dev argument.
Configuration Open the package.json file. The content may look like this
{ &amp;#34;devDependencies&amp;#34;: { &amp;#34;nodemon&amp;#34;: &amp;#34;^3.1.0&amp;#34; }, &amp;#34;dependencies&amp;#34;: { &amp;#34;dotenv&amp;#34;: &amp;#34;^16.4.5&amp;#34; } } Then Add the scrips attribute like this.</description>
      </item>
    
      <item>
        <title>如何設定 Windows 10 免密碼自動登入, 登入後自動執行挖礦</title>
        <link>https://blog.zackexplosion.fun/posts/how-setup-windows-10-rig/</link>
        <pubDate>Mon, 26 Apr 2021 01:26:21 +0800</pubDate>
        
        <guid>https://blog.zackexplosion.fun/posts/how-setup-windows-10-rig/</guid>
        <description>大家安裝礦機的時候通常獨立一台，跟自己平常用的電腦分開對吧？
接著分享我的設定流程，設定好之後萬一斷電，當機，只要重開機礦機就會自動開始挖礦！
本篇使用 Windows10 ，其他OS並不在本篇範圍內
設定 Windows 10 自動登入 微軟似乎在某個版本改掉免密碼登入的選項了，因此我們需要開啟 regedit 登錄檔編輯器。
開啟後，在上方路徑列輸入
HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\PasswordLess\Device
(別傻傻地慢慢找，直接複製貼上啊ＸＤ)
將 DevicePasswordLessBuildVersion 的數值改為 0，完成後按確定儲存。 重開機
重開機 後再次找到放大鏡輸入 netplwiz
首先取消 必須使用密碼登入.....，按下套用之後重新輸入密碼，按下確認，最後再次重開機
如果設定都正確，重開機後就不需要密碼登入了！
設定自動啟動路經 接著打開你的挖礦程式，將執行擋建立捷徑
再打開一個資料夾，在路經輸入 shell:startup，把剛剛建立的捷徑複製過來就完成啦！
最後再次重開機，如果設定都正確，應該就會看到挖礦程式自動被執行了！
相關連結 幣安交易所 https://www.binance.com/zh-TW/register?ref=TJTGK5HI MAX交易所 https://max.maicoin.com/signup?r=ab1234c1 顯卡挖以太幣 https://blog.zackexplosion.fun/posts/simple-gpu-mining-eth-guide/ </description>
      </item>
    
      <item>
        <title>挖到礦了，然後呢？</title>
        <link>https://blog.zackexplosion.fun/posts/how-to-trade-crypto-in-binance/</link>
        <pubDate>Wed, 07 Apr 2021 06:56:10 +0800</pubDate>
        
        <guid>https://blog.zackexplosion.fun/posts/how-to-trade-crypto-in-binance/</guid>
        <description>剛接觸加密貨幣挖礦的你一定有很多疑問，例如：挖這個到底能幹嘛？要怎麼賣？怎麼拿來買東西？等等問題。這邊就用幾個簡單的概念讓你快速了解加密貨幣能幹嘛。</description>
      </item>
    
      <item>
        <title>每日出金！簡易又快速的以太幣顯卡挖礦教學</title>
        <link>https://blog.zackexplosion.fun/posts/simple-gpu-mining-eth-guide/</link>
        <pubDate>Sat, 03 Apr 2021 23:44:53 +0800</pubDate>
        
        <guid>https://blog.zackexplosion.fun/posts/simple-gpu-mining-eth-guide/</guid>
        <description>幣安是我找到最最最最最最好用的礦池了，每日約台北時間下午四點不限金額出金，一張卡挖礦也可以每天看得到你的收益，更是摸的到！</description>
      </item>
    
      <item>
        <title>AJAX載入測試檔案 Load Video With Axios</title>
        <link>https://blog.zackexplosion.fun/posts/load-video-with-axios/</link>
        <pubDate>Thu, 17 Sep 2020 12:15:03 +0800</pubDate>
        
        <guid>https://blog.zackexplosion.fun/posts/load-video-with-axios/</guid>
        <description>昨天想說把檔案快取在 localstorage 可以減少上傳的步驟，結果被卡小問題卡著，後來想到直接用 ajax 載入本地檔案不是更輕鬆嗎？
於是昨天的全部廢掉，改成這樣&amp;hellip;&amp;hellip;&amp;hellip;.
if (DEV) { const testvideo = await request({ url: &amp;#34;/test.mov&amp;#34;, method: &amp;#34;GET&amp;#34;, responseType: &amp;#34;blob&amp;#34; // important }); this.$refs.video.src = URL.createObjectURL(testvideo.data); this.video = this.$refs.video; const buffer = await testvideo.data.arrayBuffer(); handleAudio.call(this, buffer); } 這樣可以省掉很多點來點去的時間&amp;hellip;.</description>
      </item>
    
      <item>
        <title>加速 Javascript File Upload 開發流程/檔案預先選取/檔案儲存localstorage</title>
        <link>https://blog.zackexplosion.fun/posts/javascript-file-upload-cache/</link>
        <pubDate>Wed, 16 Sep 2020 13:32:42 +0800</pubDate>
        
        <guid>https://blog.zackexplosion.fun/posts/javascript-file-upload-cache/</guid>
        <description>每次寫上傳檔案的功能都很靠北的要一直自己重新點，累死，研究了一下怎麼存在localstorage，這樣只要選一次，之後reload就可以省略掉這步驟了。
class DevCacheFile { key = &amp;#34;temp_file_cache&amp;#34;; constructor() {} save(file, result) { // save dev file to cache const dataToSave = JSON.stringify({ type: file.type, blob: Array.from(new Uint8Array(result)) }); localStorage.setItem(this.key, dataToSave); } restore() { var data = localStorage.getItem(this.key); if (!data) return null; data = JSON.parse(data); var blob = new Uint8Array(data.blob).buffer; blob = new Blob([blob]); var file = new File([blob], { type: data.type }); return file; } } 用法大概這樣
// whatever.js var file var devCacheFile = new DevCacheFile() var reader = new FileReader() reader.</description>
      </item>
    
      <item>
        <title>Macos Keyrepeat 速度調整</title>
        <link>https://blog.zackexplosion.fun/posts/macos-keyrepeat/</link>
        <pubDate>Tue, 01 Sep 2020 11:09:55 +0800</pubDate>
        
        <guid>https://blog.zackexplosion.fun/posts/macos-keyrepeat/</guid>
        <description>MacOS 預設的 keyrepeat 實在靠北慢，用下面的指令可以設定超過GUI能設定的上限
defaults write -g InitialKeyRepeat -int 12 # normal minimum is 15 (225 ms) defaults write -g KeyRepeat -int 2 # normal minimum is 2 (30 ms) 這是我自己習慣的設定，詳細請參考下方來源連結 https://apple.stackexchange.com/questions/10467/how-to-increase-keyboard-key-repeat-rate-on-os-x</description>
      </item>
    
      <item>
        <title>Capistrano-db-task sync disable confirm 關閉確認視窗</title>
        <link>https://blog.zackexplosion.fun/posts/capistrano-db-task-confrim/</link>
        <pubDate>Tue, 01 Sep 2020 09:49:26 +0800</pubDate>
        
        <guid>https://blog.zackexplosion.fun/posts/capistrano-db-task-confrim/</guid>
        <description>工作上很常用到 cap production db:pull 來同步 production 環境上使用者產生的資料，雖然多問無礙，但每次都問實在很煩，特別是這種要跑一陣子 task 常常執行下去後就去幹別的事。
總之，我從原始碼找到這個 SKIP_DATA_SYNC_CONFIRM 參數，搭配 direnv 設定後以後就不需要再被問惹。</description>
      </item>
    
  </channel>
</rss>